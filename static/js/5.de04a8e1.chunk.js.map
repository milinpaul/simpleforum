{"version":3,"sources":["App/Components/Buttons/index.js","App/Components/Title/index.js","App/Containers/Users/UserView/UserProfileCard.js","App/Containers/Users/UserView/RecentPosts.js","App/Containers/Users/UserView/UserViewContainer.js"],"names":["styled","button","props","theme","secondaryTextColor","h1","UserViewCard","div","UserInfo","UserProfileCard","name","username","email","website","company","onGoBackClickHandler","Title","onClick","RecentPosts","userPosts","history","user","PostGrid","map","post","PostCard","key","id","title","body","userId","UserView","UserViewContainer","match","useRequest","url","getSingleUserUrl","params","method","loading","getPostsForUserUrl","userPostsLoading","Spinner","console","log","push"],"mappings":"ybAEeA,QAAOC,OAAtB,KAEsB,SAACC,GAAD,OAAWA,EAAMC,MAAMC,sBAS3B,SAACF,GAAD,OAAWA,EAAMC,MAAMC,uB,kdCX1BJ,UAAOK,GAAtB,K,skBCIA,IAAMC,EAAeN,IAAOO,IAAV,KAYZC,EAAWR,IAAOO,IAAV,KA8CCE,EA7BS,SAAC,GAAuE,IAArEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,qBAClE,OACE,kBAACT,EAAD,KACE,kBAACU,EAAD,kBACA,kBAACR,EAAD,KACE,yCACA,4BAAKE,IAEP,kBAACF,EAAD,KACE,6CACA,4BAAKG,IAEP,kBAACH,EAAD,KACE,0CACA,4BAAKI,IAEP,kBAACJ,EAAD,KACE,4CACA,4BAAKK,IAEP,kBAACL,EAAD,KACE,iDACA,mCAAKM,QAAL,IAAKA,OAAL,EAAKA,EAASJ,OAEhB,kBAAC,IAAD,CAAQO,QAASF,GAAjB,a,gBC7BSG,EAxBK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACzC,OACE,oCACE,kBAACL,EAAD,4BACA,kBAACM,EAAA,EAAD,KACGH,GACCA,EAAUI,KAAI,SAACC,GACb,OACE,kBAACC,EAAA,EAAD,CACEL,QAASA,EACTM,IAAKF,EAAKG,GACVA,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,KAAML,EAAKK,KACXC,OAAM,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAMM,GACdhB,SAAQ,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMV,iB,oHCZhC,IAAMoB,EAAW/B,IAAOO,IAAV,KAwCCyB,UAnCW,SAAC,GAAwB,IAAD,IAArBC,EAAqB,EAArBA,MAAOb,EAAc,EAAdA,QAAc,EACxBc,YAAW,CACjCC,IAAKC,YAAgB,OAACH,QAAD,IAACA,GAAD,UAACA,EAAOI,cAAR,aAAC,EAAeP,QACrCQ,OAAQ,CAAEA,OAAQ,SAH4B,mBACzCjB,EADyC,KACnCkB,EADmC,OAKVL,YAAW,CAC/CC,IAAKK,YAAkB,OAACP,QAAD,IAACA,GAAD,UAACA,EAAOI,cAAR,aAAC,EAAeP,QACvCQ,OAAQ,CAAEA,OAAQ,SAP4B,mBAKzCnB,EALyC,KAK9BsB,EAL8B,KAUhD,GAAIF,GAAWE,EACb,OAAO,kBAACC,EAAA,EAAD,MAST,OAFAC,QAAQC,IAAI,YAAazB,GAGvB,kBAACY,EAAD,KACE,kBAAC,EAAD,CACErB,KAAMW,EAAKX,KACXC,SAAUU,EAAKV,SACfC,MAAOS,EAAKT,MACZC,QAASQ,EAAKR,QACdC,QAASO,EAAKP,QACdC,qBAduB,WAC3BK,EAAQyB,KAAK,QAeX,kBAAC,EAAD,CAAa1B,UAAWA,EAAWC,QAASA,EAASC,KAAMA","file":"static/js/5.de04a8e1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.button`\n  padding: 1rem 5rem;\n  border: 2px solid ${(props) => props.theme.secondaryTextColor};\n  border-radius: 4px;\n  outline: none;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s;\n  font-size: 1.6rem;\n\n  &:hover {\n    background: ${(props) => props.theme.secondaryTextColor};\n    color: #fff;\n  }\n`;\n","import styled from 'styled-components'\n\nexport default styled.h1`\n  margin: 1.2rem 0;\n  align-self: flex-start;\n  font-size: 2rem;\n  position: relative;\n  padding-bottom: 0.5rem;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    content: '';\n    border-bottom: 2px solid #ccc;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from '../../../Components/Buttons'\nimport Title from '../../../Components/Title'\n\nconst UserViewCard = styled.div`\n  border-radius: 0.5rem;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  padding: 3rem;\n  margin-top: 10rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst UserInfo = styled.div`\n  display: flex;\n\n  & h3 {\n    margin-bottom: 1rem;\n    text-align: left;\n    font-size: 1.5rem;\n    font-weight: 400;\n  }\n\n  & label {\n    font-size: 1.5rem;\n    font-weight: 700;\n    margin-right: 1rem;\n  }\n`\n\nconst UserProfileCard = ({ name, username, email, website, company, onGoBackClickHandler }) => {\n  return (\n    <UserViewCard>\n      <Title>User Info</Title>\n      <UserInfo>\n        <label>Name: </label>\n        <h3>{name}</h3>\n      </UserInfo>\n      <UserInfo>\n        <label>Username: </label>\n        <h3>{username}</h3>\n      </UserInfo>\n      <UserInfo>\n        <label>Email: </label>\n        <h3>{email}</h3>\n      </UserInfo>\n      <UserInfo>\n        <label>Website: </label>\n        <h3>{website}</h3>\n      </UserInfo>\n      <UserInfo>\n        <label>Company Name: </label>\n        <h3>{company?.name}</h3>\n      </UserInfo>\n      <Button onClick={onGoBackClickHandler}>Go Back</Button>\n    </UserViewCard>\n  )\n}\n\nexport default UserProfileCard\n","import React from 'react'\n\nimport PostGrid from '../../../Components/PostGrid'\nimport PostCard from '../../../Components/PostCard'\nimport Title from '../../../Components/Title'\n\nconst RecentPosts = ({ userPosts, history, user }) => {\n  return (\n    <>\n      <Title>User's Recent Posts</Title>\n      <PostGrid>\n        {userPosts &&\n          userPosts.map((post) => {\n            return (\n              <PostCard\n                history={history}\n                key={post.id}\n                id={post.id}\n                title={post.title}\n                body={post.body}\n                userId={user?.id}\n                username={user?.username}\n              />\n            )\n          })}\n      </PostGrid>\n    </>\n  )\n}\n\nexport default RecentPosts\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spinner from '../../../Components/Spinner'\nimport useRequest from '../../../Hooks/useRequest'\nimport { getSingleUserUrl, getPostsForUserUrl } from '../../../helpers/apiUrl'\nimport UserProfileCard from './UserProfileCard'\nimport RecentPosts from './RecentPosts'\n\nconst UserView = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst UserViewContainer = ({ match, history }) => {\n  const [user, loading] = useRequest({\n    url: getSingleUserUrl(match?.params?.userId),\n    method: { method: 'GET' },\n  })\n  const [userPosts, userPostsLoading] = useRequest({\n    url: getPostsForUserUrl(match?.params?.userId),\n    method: { method: 'GET' },\n  })\n\n  if (loading || userPostsLoading) {\n    return <Spinner />\n  }\n\n  const onGoBackClickHandler = () => {\n    history.push('/')\n  }\n\n  console.log('userPosts', userPosts)\n\n  return (\n    <UserView>\n      <UserProfileCard\n        name={user.name}\n        username={user.username}\n        email={user.email}\n        website={user.website}\n        company={user.company}\n        onGoBackClickHandler={onGoBackClickHandler}\n      />\n      <RecentPosts userPosts={userPosts} history={history} user={user} />\n    </UserView>\n  )\n}\n\nexport default UserViewContainer\n"],"sourceRoot":""}